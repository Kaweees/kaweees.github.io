(()=>{var oe=Object.create;var te=Object.defineProperty;var se=Object.getOwnPropertyDescriptor;var re=Object.getOwnPropertyNames;var ae=Object.getPrototypeOf,le=Object.prototype.hasOwnProperty;var he=(e,i)=>()=>(i||e((i={exports:{}}).exports,i),i.exports);var ue=(e,i,n,o)=>{if(i&&typeof i=="object"||typeof i=="function")for(let s of re(i))!le.call(e,s)&&s!==n&&te(e,s,{get:()=>i[s],enumerable:!(o=se(i,s))||o.enumerable});return e};var ce=(e,i,n)=>(n=e!=null?oe(ae(e)):{},ue(i||!e||!e.__esModule?te(n,"default",{value:e,enumerable:!0}):n,e));var ie=he((exports,module)=>{(function _f(self){"use strict";try{module&&(self=module)}catch(e){}self._factory=_f;var t;function u(e){return typeof e!="undefined"?e:!0}function aa(e){let i=Array(e);for(let n=0;n<e;n++)i[n]=v();return i}function v(){return Object.create(null)}function ba(e,i){return i.length-e.length}function x(e){return typeof e=="string"}function C(e){return typeof e=="object"}function D(e){return typeof e=="function"}function ca(e,i){var n=da;if(e&&(i&&(e=E(e,i)),this.H&&(e=E(e,this.H)),this.J&&1<e.length&&(e=E(e,this.J)),n||n==="")){if(e=e.split(n),this.filter){i=this.filter,n=e.length;let o=[];for(let s=0,r=0;s<n;s++){let l=e[s];l&&!i[l]&&(o[r++]=l)}e=o}return e}return e}let da=/[\p{Z}\p{S}\p{P}\p{C}]+/u,ea=/[\u0300-\u036f]/g;function fa(e,i){let n=Object.keys(e),o=n.length,s=[],r="",l=0;for(let h=0,f,m;h<o;h++)f=n[h],(m=e[f])?(s[l++]=F(i?"(?!\\b)"+f+"(\\b|_)":f),s[l++]=m):r+=(r?"|":"")+f;return r&&(s[l++]=F(i?"(?!\\b)("+r+")(\\b|_)":"("+r+")"),s[l]=""),s}function E(e,i){for(let n=0,o=i.length;n<o&&(e=e.replace(i[n],i[n+1]),e);n+=2);return e}function F(e){return new RegExp(e,"g")}function ha(e){let i="",n="";for(let o=0,s=e.length,r;o<s;o++)(r=e[o])!==n&&(i+=n=r);return i}var ja={encode:ia,F:!1,G:""};function ia(e){return ca.call(this,(""+e).toLowerCase(),!1)}let ka={},G={};function la(e){I(e,"add"),I(e,"append"),I(e,"search"),I(e,"update"),I(e,"remove")}function I(e,i){e[i+"Async"]=function(){let n=this,o=arguments;var s=o[o.length-1];let r;return D(s)&&(r=s,delete o[o.length-1]),s=new Promise(function(l){setTimeout(function(){n.async=!0;let h=n[i].apply(n,o);n.async=!1,l(h)})}),r?(s.then(r),this):s}}function ma(e,i,n,o){let s=e.length,r=[],l,h,f=0;o&&(o=[]);for(let m=s-1;0<=m;m--){let g=e[m],$=g.length,w=v(),k=!l;for(let p=0;p<$;p++){let y=g[p],A=y.length;if(A)for(let R=0,_,q;R<A;R++)if(q=y[R],l){if(l[q]){if(!m){if(n)n--;else if(r[f++]=q,f===i)return r}(m||o)&&(w[q]=1),k=!0}if(o&&(_=(h[q]||0)+1,h[q]=_,_<s)){let B=o[_-2]||(o[_-2]=[]);B[B.length]=q}}else w[q]=1}if(o)l||(h=w);else if(!k)return[];l=w}if(o)for(let m=o.length-1,g,$;0<=m;m--){g=o[m],$=g.length;for(let w=0,k;w<$;w++)if(k=g[w],!l[k]){if(n)n--;else if(r[f++]=k,f===i)return r;l[k]=1}}return r}function na(e,i){let n=v(),o=v(),s=[];for(let r=0;r<e.length;r++)n[e[r]]=1;for(let r=0,l;r<i.length;r++){l=i[r];for(let h=0,f;h<l.length;h++)f=l[h],n[f]&&!o[f]&&(o[f]=1,s[s.length]=f)}return s}function J(e){this.l=e!==!0&&e,this.cache=v(),this.h=[]}function oa(e,i,n){C(e)&&(e=e.query);let o=this.cache.get(e);return o||(o=this.search(e,i,n),this.cache.set(e,o)),o}J.prototype.set=function(e,i){if(!this.cache[e]){var n=this.h.length;for(n===this.l?delete this.cache[this.h[n-1]]:n++,--n;0<n;n--)this.h[n]=this.h[n-1];this.h[0]=e}this.cache[e]=i},J.prototype.get=function(e){let i=this.cache[e];if(this.l&&i&&(e=this.h.indexOf(e))){let n=this.h[e-1];this.h[e-1]=this.h[e],this.h[e]=n}return i};let qa={memory:{charset:"latin:extra",D:3,B:4,m:!1},performance:{D:3,B:3,s:!1,context:{depth:2,D:1}},match:{charset:"latin:extra",G:"reverse"},score:{charset:"latin:advanced",D:20,B:3,context:{depth:3,D:9}},default:{}};function ra(e,i,n,o,s,r,l){setTimeout(function(){let h=e(n?n+"."+o:o,JSON.stringify(l));h&&h.then?h.then(function(){i.export(e,i,n,s,r+1)}):i.export(e,i,n,s,r+1)})}function K(e,i){if(!(this instanceof K))return new K(e);var n;if(e){x(e)?e=qa[e]:(n=e.preset)&&(e=Object.assign({},n[n],e)),n=e.charset;var o=e.lang;x(n)&&(n.indexOf(":")===-1&&(n+=":default"),n=G[n]),x(o)&&(o=ka[o])}else e={};let s,r,l=e.context||{};if(this.encode=e.encode||n&&n.encode||ia,this.register=i||v(),this.D=s=e.resolution||9,this.G=i=n&&n.G||e.tokenize||"strict",this.depth=i==="strict"&&l.depth,this.l=u(l.bidirectional),this.s=r=u(e.optimize),this.m=u(e.fastupdate),this.B=e.minlength||1,this.C=e.boost,this.map=r?aa(s):v(),this.A=s=l.resolution||1,this.h=r?aa(s):v(),this.F=n&&n.F||e.rtl,this.H=(i=e.matcher||o&&o.H)&&fa(i,!1),this.J=(i=e.stemmer||o&&o.J)&&fa(i,!0),n=i=e.filter||o&&o.filter){n=i,o=v();for(let h=0,f=n.length;h<f;h++)o[n[h]]=1;n=o}this.filter=n,this.cache=(i=e.cache)&&new J(i)}t=K.prototype,t.append=function(e,i){return this.add(e,i,!0)},t.add=function(e,i,n,o){if(i&&(e||e===0)){if(!o&&!n&&this.register[e])return this.update(e,i);if(i=this.encode(i),o=i.length){let m=v(),g=v(),$=this.depth,w=this.D;for(let k=0;k<o;k++){let p=i[this.F?o-1-k:k];var s=p.length;if(p&&s>=this.B&&($||!g[p])){var r=L(w,o,k),l="";switch(this.G){case"full":if(2<s){for(r=0;r<s;r++)for(var h=s;h>r;h--)if(h-r>=this.B){var f=L(w,o,k,s,r);l=p.substring(r,h),M(this,g,l,f,e,n)}break}case"reverse":if(1<s){for(h=s-1;0<h;h--)l=p[h]+l,l.length>=this.B&&M(this,g,l,L(w,o,k,s,h),e,n);l=""}case"forward":if(1<s){for(h=0;h<s;h++)l+=p[h],l.length>=this.B&&M(this,g,l,r,e,n);break}default:if(this.C&&(r=Math.min(r/this.C(i,p,k)|0,w-1)),M(this,g,p,r,e,n),$&&1<o&&k<o-1){for(s=v(),l=this.A,r=p,h=Math.min($+1,o-k),s[r]=1,f=1;f<h;f++)if((p=i[this.F?o-1-k-f:k+f])&&p.length>=this.B&&!s[p]){s[p]=1;let y=this.l&&p>r;M(this,m,y?r:p,L(l+(o/2>l?0:1),o,k,h-1,f-1),e,n,y?p:r)}}}}}this.m||(this.register[e]=1)}}return this};function L(e,i,n,o,s){return n&&1<e?i+(o||0)<=e?n+(s||0):(e-1)/(i+(o||0))*(n+(s||0))+1|0:0}function M(e,i,n,o,s,r,l){let h=l?e.h:e.map;(!i[n]||l&&!i[n][l])&&(e.s&&(h=h[o]),l?(i=i[n]||(i[n]=v()),i[l]=1,h=h[l]||(h[l]=v())):i[n]=1,h=h[n]||(h[n]=[]),e.s||(h=h[o]||(h[o]=[])),r&&h.includes(s)||(h[h.length]=s,e.m&&(e=e.register[s]||(e.register[s]=[]),e[e.length]=h)))}t.search=function(e,i,n){n||(!i&&C(e)?(n=e,e=n.query):C(i)&&(n=i));let o=[],s,r,l=0;if(n){e=n.query||e,i=n.limit,l=n.offset||0;var h=n.context;r=n.suggest}if(e&&(e=this.encode(""+e),s=e.length,1<s)){n=v();var f=[];for(let g=0,$=0,w;g<s;g++)if((w=e[g])&&w.length>=this.B&&!n[w])if(this.s||r||this.map[w])f[$++]=w,n[w]=1;else return o;e=f,s=e.length}if(!s)return o;i||(i=100),h=this.depth&&1<s&&h!==!1,n=0;let m;h?(m=e[0],n=1):1<s&&e.sort(ba);for(let g,$;n<s;n++){if($=e[n],h?(g=sa(this,o,r,i,l,s===2,$,m),r&&g===!1&&o.length||(m=$)):g=sa(this,o,r,i,l,s===1,$),g)return g;if(r&&n===s-1){if(f=o.length,!f){if(h){h=0,n=-1;continue}return o}if(f===1)return ta(o[0],i,l)}}return ma(o,i,l,r)};function sa(e,i,n,o,s,r,l,h){let f=[],m=h?e.h:e.map;if(e.s||(m=ua(m,l,h,e.l)),m){let g=0,$=Math.min(m.length,h?e.A:e.D);for(let w=0,k=0,p,y;w<$&&!((p=m[w])&&(e.s&&(p=ua(p,l,h,e.l)),s&&p&&r&&(y=p.length,y<=s?(s-=y,p=null):(p=p.slice(s),s=0)),p&&(f[g++]=p,r&&(k+=p.length,k>=o))));w++);if(g){if(r)return ta(f,o,0);i[i.length]=f;return}}return!n&&f}function ta(e,i,n){return e=e.length===1?e[0]:[].concat.apply([],e),n||e.length>i?e.slice(n,n+i):e}function ua(e,i,n,o){return n?(o=o&&i>n,e=(e=e[o?i:n])&&e[o?n:i]):e=e[i],e}t.contain=function(e){return!!this.register[e]},t.update=function(e,i){return this.remove(e).add(e,i)},t.remove=function(e,i){let n=this.register[e];if(n){if(this.m)for(let o=0,s;o<n.length;o++)s=n[o],s.splice(s.indexOf(e),1);else N(this.map,e,this.D,this.s),this.depth&&N(this.h,e,this.A,this.s);if(i||delete this.register[e],this.cache){i=this.cache;for(let o=0,s,r;o<i.h.length;o++)r=i.h[o],s=i.cache[r],s.includes(e)&&(i.h.splice(o--,1),delete i.cache[r])}}return this};function N(e,i,n,o,s){let r=0;if(e.constructor===Array)if(s)i=e.indexOf(i),i!==-1?1<e.length&&(e.splice(i,1),r++):r++;else{s=Math.min(e.length,n);for(let l=0,h;l<s;l++)(h=e[l])&&(r=N(h,i,n,o,s),o||r||delete e[l])}else for(let l in e)(r=N(e[l],i,n,o,s))||delete e[l];return r}t.searchCache=oa,t.export=function(e,i,n,o,s){let r,l;switch(s||(s=0)){case 0:if(r="reg",this.m){l=v();for(let h in this.register)l[h]=1}else l=this.register;break;case 1:r="cfg",l={doc:0,opt:this.s?1:0};break;case 2:r="map",l=this.map;break;case 3:r="ctx",l=this.h;break;default:return}return ra(e,i||this,n,r,o,s,l),!0},t.import=function(e,i){if(i)switch(x(i)&&(i=JSON.parse(i)),e){case"cfg":this.s=!!i.opt;break;case"reg":this.m=!1,this.register=i;break;case"map":this.map=i;break;case"ctx":this.h=i}},la(K.prototype);function va(e){e=e.data;var i=self._index;let n=e.args;var o=e.task;switch(o){case"init":o=e.options||{},e=e.factory,i=o.encode,o.cache=!1,i&&i.indexOf("function")===0&&(o.encode=Function("return "+i)()),e?(Function("return "+e)()(self),self._index=new self.FlexSearch.Index(o),delete self.FlexSearch):self._index=new K(o);break;default:e=e.id,i=i[o].apply(i,n),postMessage(o==="search"?{id:e,msg:i}:{id:e})}}let wa=0;function O(e){if(!(this instanceof O))return new O(e);var i;e?D(i=e.encode)&&(e.encode=i.toString()):e={},(i=(self||window)._factory)&&(i=i.toString());let n=typeof window=="undefined"&&self.exports,o=this;this.o=xa(i,n,e.worker),this.h=v(),this.o&&(n?this.o.on("message",function(s){o.h[s.id](s.msg),delete o.h[s.id]}):this.o.onmessage=function(s){s=s.data,o.h[s.id](s.msg),delete o.h[s.id]},this.o.postMessage({task:"init",factory:i,options:e}))}P("add"),P("append"),P("search"),P("update"),P("remove");function P(e){O.prototype[e]=O.prototype[e+"Async"]=function(){let i=this,n=[].slice.call(arguments);var o=n[n.length-1];let s;return D(o)&&(s=o,n.splice(n.length-1,1)),o=new Promise(function(r){setTimeout(function(){i.h[++wa]=r,i.o.postMessage({task:e,id:wa,args:n})})}),s?(o.then(s),this):o}}function xa(a,b,c){let d;try{d=b?eval('new (require("worker_threads")["Worker"])("../dist/node/node.js")'):a?new Worker(URL.createObjectURL(new Blob(["onmessage="+va.toString()],{type:"text/javascript"}))):new Worker(x(c)?c:"worker/worker.js",{type:"module"})}catch(e){}return d}function Q(e){if(!(this instanceof Q))return new Q(e);var i=e.document||e.doc||e,n;this.K=[],this.h=[],this.A=[],this.register=v(),this.key=(n=i.key||i.id)&&S(n,this.A)||"id",this.m=u(e.fastupdate),this.C=(n=i.store)&&n!==!0&&[],this.store=n&&v(),this.I=(n=i.tag)&&S(n,this.A),this.l=n&&v(),this.cache=(n=e.cache)&&new J(n),e.cache=!1,this.o=e.worker,this.async=!1,n=v();let o=i.index||i.field||i;x(o)&&(o=[o]);for(let s=0,r,l;s<o.length;s++)r=o[s],x(r)||(l=r,r=r.field),l=C(l)?Object.assign({},e,l):e,this.o&&(n[r]=new O(l),n[r].o||(this.o=!1)),this.o||(n[r]=new K(l,this.register)),this.K[s]=S(r,this.A),this.h[s]=r;if(this.C)for(e=i.store,x(e)&&(e=[e]),i=0;i<e.length;i++)this.C[i]=S(e[i],this.A);this.index=n}function S(e,i){let n=e.split(":"),o=0;for(let s=0;s<n.length;s++)e=n[s],0<=e.indexOf("[]")&&(e=e.substring(0,e.length-2))&&(i[o]=!0),e&&(n[o++]=e);return o<n.length&&(n.length=o),1<o?n:n[0]}function T(e,i){if(x(i))e=e[i];else for(let n=0;e&&n<i.length;n++)e=e[i[n]];return e}function U(e,i,n,o,s){if(e=e[s],o===n.length-1)i[s]=e;else if(e)if(e.constructor===Array)for(i=i[s]=Array(e.length),s=0;s<e.length;s++)U(e,i,n,o,s);else i=i[s]||(i[s]=v()),s=n[++o],U(e,i,n,o,s)}function V(e,i,n,o,s,r,l,h){if(e=e[l])if(o===i.length-1){if(e.constructor===Array){if(n[o]){for(i=0;i<e.length;i++)s.add(r,e[i],!0,!0);return}e=e.join(" ")}s.add(r,e,h,!0)}else if(e.constructor===Array)for(l=0;l<e.length;l++)V(e,i,n,o,s,r,l,h);else l=i[++o],V(e,i,n,o,s,r,l,h)}t=Q.prototype,t.add=function(e,i,n){if(C(e)&&(i=e,e=T(i,this.key)),i&&(e||e===0)){if(!n&&this.register[e])return this.update(e,i);for(let o=0,s,r;o<this.h.length;o++)r=this.h[o],s=this.K[o],x(s)&&(s=[s]),V(i,s,this.A,0,this.index[r],e,s[0],n);if(this.I){let o=T(i,this.I),s=v();x(o)&&(o=[o]);for(let r=0,l,h;r<o.length;r++)if(l=o[r],!s[l]&&(s[l]=1,h=this.l[l]||(this.l[l]=[]),!n||!h.includes(e))&&(h[h.length]=e,this.m)){let f=this.register[e]||(this.register[e]=[]);f[f.length]=h}}if(this.store&&(!n||!this.store[e])){let o;if(this.C){o=v();for(let s=0,r;s<this.C.length;s++)r=this.C[s],x(r)?o[r]=i[r]:U(i,o,r,0,r[0])}this.store[e]=o||i}}return this},t.append=function(e,i){return this.add(e,i,!0)},t.update=function(e,i){return this.remove(e).add(e,i)},t.remove=function(e){if(C(e)&&(e=T(e,this.key)),this.register[e]){for(var i=0;i<this.h.length&&(this.index[this.h[i]].remove(e,!this.o),!this.m);i++);if(this.I&&!this.m)for(let n in this.l){i=this.l[n];let o=i.indexOf(e);o!==-1&&(1<i.length?i.splice(o,1):delete this.l[n])}this.store&&delete this.store[e],delete this.register[e]}return this},t.search=function(e,i,n,o){n||(!i&&C(e)?(n=e,e=""):C(i)&&(n=i,i=0));let s=[],r=[],l,h,f,m,g,$,w=0;if(n)if(n.constructor===Array)f=n,n=null;else{if(e=n.query||e,f=(l=n.pluck)||n.index||n.field,m=n.tag,h=this.store&&n.enrich,g=n.bool==="and",i=n.limit||i||100,$=n.offset||0,m&&(x(m)&&(m=[m]),!e)){for(let p=0,y;p<m.length;p++)(y=ya.call(this,m[p],i,$,h))&&(s[s.length]=y,w++);return w?s:[]}x(f)&&(f=[f])}f||(f=this.h),g=g&&(1<f.length||m&&1<m.length);let k=!o&&(this.o||this.async)&&[];for(let p=0,y,A,R;p<f.length;p++){let _;if(A=f[p],x(A)||(_=A,A=_.field,e=_.query||e,i=_.limit||i),k)k[p]=this.index[A].searchAsync(e,i,_||n);else{if(o?y=o[p]:y=this.index[A].search(e,i,_||n),R=y&&y.length,m&&R){let q=[],B=0;g&&(q[0]=[y]);for(let X=0,ee,j;X<m.length;X++)ee=m[X],(R=(j=this.l[ee])&&j.length)&&(B++,q[q.length]=g?[j]:j);B&&(y=g?ma(q,i||100,$||0):na(y,q),R=y.length)}if(R)r[w]=A,s[w++]=y;else if(g)return[]}}if(k){let p=this;return new Promise(function(y){Promise.all(k).then(function(A){y(p.search(e,i,n,A))})})}if(!w)return[];if(l&&(!h||!this.store))return s[0];for(let p=0,y;p<r.length;p++){if(y=s[p],y.length&&h&&(y=za.call(this,y)),l)return y;s[p]={field:r[p],result:y}}return s};function ya(e,i,n,o){let s=this.l[e],r=s&&s.length-n;if(r&&0<r)return(r>i||n)&&(s=s.slice(n,n+i)),o&&(s=za.call(this,s)),{tag:e,result:s}}function za(e){let i=Array(e.length);for(let n=0,o;n<e.length;n++)o=e[n],i[n]={id:o,doc:this.store[o]};return i}t.contain=function(e){return!!this.register[e]},t.get=function(e){return this.store[e]},t.set=function(e,i){return this.store[e]=i,this},t.searchCache=oa,t.export=function(e,i,n,o,s){if(s||(s=0),o||(o=0),o<this.h.length){let r=this.h[o],l=this.index[r];i=this,setTimeout(function(){l.export(e,i,s?r:"",o,s++)||(o++,s=1,i.export(e,i,r,o,s))})}else{let r,l;switch(s){case 1:r="tag",l=this.l;break;case 2:r="store",l=this.store;break;default:return}ra(e,this,n,r,o,s,l)}},t.import=function(e,i){if(i)switch(x(i)&&(i=JSON.parse(i)),e){case"tag":this.l=i;break;case"reg":this.m=!1,this.register=i;for(let o=0,s;o<this.h.length;o++)s=this.index[this.h[o]],s.register=i,s.m=!1;break;case"store":this.store=i;break;default:e=e.split(".");let n=e[0];e=e[1],n&&e&&this.index[n].import(e,i)}},la(Q.prototype);var Ba={encode:Aa,F:!1,G:""};let Ca=[F("[\xE0\xE1\xE2\xE3\xE4\xE5]"),"a",F("[\xE8\xE9\xEA\xEB]"),"e",F("[\xEC\xED\xEE\xEF]"),"i",F("[\xF2\xF3\xF4\xF5\xF6\u0151]"),"o",F("[\xF9\xFA\xFB\xFC\u0171]"),"u",F("[\xFD\u0177\xFF]"),"y",F("\xF1"),"n",F("[\xE7c]"),"k",F("\xDF"),"s",F(" & ")," and "];function Aa(e){var i=e=""+e;return i.normalize&&(i=i.normalize("NFD").replace(ea,"")),ca.call(this,i.toLowerCase(),!e.normalize&&Ca)}var Ea={encode:Da,F:!1,G:"strict"};let Fa=/[^a-z0-9]+/,Ga={b:"p",v:"f",w:"f",z:"s",x:"s",\u00DF:"s",d:"t",n:"m",c:"k",g:"k",j:"k",q:"k",i:"e",y:"e",u:"o"};function Da(e){e=Aa.call(this,e).join(" ");let i=[];if(e){let n=e.split(Fa),o=n.length;for(let s=0,r,l=0;s<o;s++)if((e=n[s])&&(!this.filter||!this.filter[e])){r=e[0];let h=Ga[r]||r,f=h;for(let m=1;m<e.length;m++){r=e[m];let g=Ga[r]||r;g&&g!==f&&(h+=g,f=g)}i[l++]=h}}return i}var Ia={encode:Ha,F:!1,G:""};let Ja=[F("ae"),"a",F("oe"),"o",F("sh"),"s",F("th"),"t",F("ph"),"f",F("pf"),"f",F("(?![aeo])h(?![aeo])"),"",F("(?!^[aeo])h(?!^[aeo])"),""];function Ha(e,i){return e&&(e=Da.call(this,e).join(" "),2<e.length&&(e=E(e,Ja)),i||(1<e.length&&(e=ha(e)),e&&(e=e.split(" ")))),e||[]}var La={encode:Ka,F:!1,G:""};let Ma=F("(?!\\b)[aeo]");function Ka(e){return e&&(e=Ha.call(this,e,!0),1<e.length&&(e=e.replace(Ma,"")),1<e.length&&(e=ha(e)),e&&(e=e.split(" "))),e||[]}G["latin:default"]=ja,G["latin:simple"]=Ba,G["latin:balance"]=Ea,G["latin:advanced"]=Ia,G["latin:extra"]=La;let W=self,Y,Z={Index:K,Document:Q,Worker:O,registerCharset:function(e,i){G[e]=i},registerLanguage:function(e,i){ka[e]=i}};(Y=W.define)&&Y.amd?Y([],function(){return Z}):W.exports?W.exports=Z:W.FlexSearch=Z})(exports)});var ne=ce(ie());var z=document.getElementById("search__text"),H=document.getElementById("search__suggestions");z!==null&&document.addEventListener("keydown",e=>{e.ctrlKey&&e.key==="/"?(e.preventDefault(),z.focus()):e.key==="Escape"&&(z.blur(),H.classList.add("search__suggestions--hidden"))});document.addEventListener("click",e=>{H.contains(e.target)||H.classList.add("search__suggestions--hidden")});document.addEventListener("keydown",e=>{if(H.classList.contains("search__suggestions--hidden"))return;let n=[...H.querySelectorAll("a")];if(n.length===0)return;let o=n.indexOf(document.activeElement);if(e.key==="ArrowDown"){e.preventDefault();let s=o+1<n.length?o+1:o;n[s].focus()}else e.key==="ArrowUp"&&(e.preventDefault(),nextIndex=o>0?o-1:0,n[nextIndex].focus())});(function(){let e=new ne.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/blog/dotfiles/tmux/",title:"An Easy Guide to Using Tmux",description:"A brief guide to setting up, configuring, and using Tmux for terminal multiplexing.",content:`Tmux# Usage# Install tmux
sudo apt install tmux Install tpm (Tmux Plugin Manager)
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm Reload TMUX environment so TPM is sourced:
# type this in terminal if tmux is already running tmux source $XDG_CONFIG_HOME/tmux/tmux.conf Keybinds# To enter commands into tmux, you must enter a specific keybind, which is called the prefix key, followed by the command. My prefix key is ctrl + space.
To refresh tmux and install new plugins, type prefix + I (capital i, as in Install)
Window Management Commands# Command Keybind Command Description prefix + c create new window and switch to it prefix + # switch to window # prefix + n switch to next window prefix + p switch to previous window prefix + : swap window with next window prefix + ; swap window with previous window prefix + &amp; kill window and all panes in it Pane Management Commands# Command Keybind Command Description prefix + % split a pane horizontally into two panes prefix + &quot; split a pane vertically into two panes prefix + { swap pane with previous pane prefix + } swap pane with next pane prefix + h / \u2190 switch to pane on the left prefix + j / \u2193 switch to pane below prefix + k / \u2191 switch to pane above prefix + l / \u2192 switch to pane on the right prefix + q + # switch active pane to pane # prefix + z zoom in/out of pane to take up full window prefix + ! break pane into a new window prefix + x kill pane Miscellaneous Commands# Command Keybind Command Description v start selection in copy mode y yank (copy) selection to system clipboard ctrl + v toggle between rectangular and line selection mode prefix + r refresh tmux configuration `}).add({id:1,href:"/blog/c-makefile/",title:"Crafting a Robust and Maintainable C Makefile",description:"A brief guide to creating from scratch the Makefile template that is used in my C projects.",content:`I&rsquo;m pretty pedantic about the quality of my code, and I like to keep my projects organized and maintainable. One of the tools that I use to achieve this is GNU Make, which is a powerful build system that can be used to automate the process of compiling and linking C programs. In this post, I will show you how to create a simple and robust Makefile template that can be used in your C projects.
First, create a new file called Makefile in the root directory of your project. Let&rsquo;s start by defining the name of the program that we will be building.
# The name of the program to build. TARGET := example Complier# The first thing we need to do is define the compiler and shell that we will be using. In this example, we will be using gcc and /bin/bash, respectively. We will also define the compiler flags that we will be using.
# The compiler executable. CC := gcc # The compiler flags. CFLAGS := -Wall -Wextra -Werror -pedantic -std=c99 # The linker executable. LD := gcc # The linker flags. LDFLAGS := -Wall -Wextra -Werror -pedantic -std=c99 # The shell executable. SHELL := /bin/bash Testing and Debugging# Next, we will define some variables that will be used for testing and debugging our project. We will define the name of the test executable, the name of the debug executable, and provide some flags that will be used by the memory checker and debugger.
# The memory checker executable. MEMCHECK := valgrind # The memory checker flags. MEMCHECK_FLAGS := --leak-check=full --show-leak-kinds=all --track-origins=yes # The debugger executable. DEBUGGER := gdb # The debugger flags. DEBUGGER_FLAGS := # The name of the test input file TEST_INPUT := # The name of the test output file TEST_OUTPUT := # The name of the reference executable REF_EXE := # The name of the reference output file REF_OUTPUT := Directories# One of the cool things about make is we can set varibles to be the output of shell commands by using the := operator. This way, we can define variables that refer to directories related to the root directory of the project. We are going to work under the assumption that the project has the following directory structure:
.project/ # root directory of the project \u251C\u2500\u2500 include/ # header files \u251C\u2500\u2500 lib/ # external libraries \u251C\u2500\u2500 obj/ # object files \u251C\u2500\u2500 src/ # source files \u2514\u2500\u2500 target/ # build artifacts \u251C\u2500\u2500 debug/ # debug build \u2514\u2500\u2500 release/ # release build To achieve this, we can define the following variables:
# top directory of project TOP_DIR := $(shell pwd) # directory to locate source files SRC_DIR := $(TOP_DIR)/src # directory to locate header files INC_DIR := $(TOP_DIR)/include # directory to locate external libraries files LIB_DIR := $(TOP_DIR)/lib # directory to locate object files OBJ_DIR := $(TOP_DIR)/obj # directory to place build artifacts BUILD_DIR := $(TOP_DIR)/target/release/ Targets# Now that we have defined all the necessary variables, we can start defining the targets that will be used to build our project. The first target that we will define is the all target, which will build the program.
# The default target. .PHONY: all all: $(BUILD_DIR)/$(TARGET) `}).add({id:2,href:"/blog/dotfiles/ssh/",title:"Using Secure Shell (ssh) and Key-Based Authentication",description:"A brief guide to setting up, configuring, and using ssh for secure remote access to servers.",content:`Installation# An ssh client is required to connect to remote servers. Fortunately, ssh is already installed on most Linux distributions and macOS. As of Windows 10, OpenSSH is included in Windows. To check whether you have it installed, run the following command:
ssh -V If ssh is not installed on your machine, you can install it by running the following command:
sudo apt-get install openssh-client openssh-server Usage# Once ssh is installed on your machine, you can connect to remote servers and interface with them via the commands line. To connect to the server, use the following command:
ssh &lt;username&gt;@&lt;server_ip&gt; exit # to exit the server SSH Key-Based Authentication Setup# Normally, connecting to a server via ssh requires you to enter your password. This is called password-based authentication.
However, you can set up SSH key-based authentication so that you do not have to enter your password every time you connect to a server.
To set up SSH key-based authentication, follow the steps below.
Generate a new ssh key (we will generate an RSA SSH key pair with a key size of 4096 bits) Note Do not change the default name or location of the key. Using a passphrase is optional but not recommended.
# If the host was previously used for ssh and the host key has changed, remove the old host key ssh-keygen -f &#34;~/.ssh/known_hosts&#34; -R &#34;&lt;server_ip&gt;&#34; # Generate a new ssh key ssh-keygen -t rsa -b 4096 Copy the public key to the server # Ssh into the server ssh &lt;username&gt;@&lt;server_ip&gt; # Create ssh directory mkdir ~/.ssh cd ~/.ssh # exit server exit On your local machine execute the following commands: scp ~/.ssh/id_rsa.pub &lt;username&gt;@&lt;server_ip&gt;:~/.ssh/authorized_keys Change the permissions of the ssh directory and its contents to prevent other users from accessing your keys sh # Ssh into the server ssh &lt;username&gt;@&lt;server_ip&gt; # Restrict read, write, and execute permissions to the \`~/.ssh\` directory to only the owner (\`username\`) chmod 700 ~/.ssh/ # Restrict read and write permissions to the contents of the \`authorized_keys\` directory to only the owner (\`username\`) chmod 600 ~/.ssh/authorized_keys # exit server exit After completing the steps above, you should be able to connect to the server without entering your password. Enabling SSH Key-Based Authentication Only# Since SSH key-based authentication is more convenient and more secure than password-based authentication, we will restrict the server to only use SSH key-based authentication.
To do this, we will edit the server&rsquo;s SSH configuration file. This file is located at /etc/ssh/sshd_config.
Warning Password-based authentication and challenge-response authentication will be disabled. If you do not have password-based authentication already configured, you will not be able to connect to the server.
Method 1 - Configuration via ssh-copy-id# To configure the server to only use SSH key-based authentication via ssh-copy-id, follow the steps below.
# Copy the public key to the server ssh-copy-id -i ~/.ssh/id_rsa.pub &lt;username&gt;@&lt;server_ip&gt; # Ssh into the server ssh &lt;username&gt;@&lt;server_ip&gt; # exit server exit Method 2 - Manual Configuration# To manually configure the server to only use SSH key-based authentication, run the following commands:
Warning the location of the SSH configuration file is assumed to be located at /etc/ssh/sshd_config. If this is not the case, you will need to modify the commands below to reflect the location of the SSH configuration file. You can find the location of the SSH configuration file by executing a script I wrote found in my dotfiles&rsquo;s &gt; /scripts folder
# make find_sshd_config executable chmod +x find_sshd_config.sh ./find_sshd_config.sh # Ssh into the server ssh &lt;username&gt;@&lt;ip&gt; # /etc/ssh/sshd_config = ssh config of server # Disable password-based authentication sudo sed -i &#39;s/^#PasswordAuthentication yes/PasswordAuthentication no/&#39; /etc/ssh/sshd_config # Disable challenge-response authentication sudo sed -i &#39;s/^#ChallengeResponseAuthentication yes/ChallengeResponseAuthentication no/&#39; /etc/ssh/sshd_config # Enable public key authentication on the server sudo sed -i &#39;s/^#PubkeyAuthentication yes/PubkeyAuthentication yes/&#39; /etc/ssh/sshd_config # Restart the server&#39;s SSH service to apply the new configuration if [[ $(ps -p 1 -o comm=) == &#34;systemd&#34; ]]; then ## On systemd-based systems echo &#34;System is systemd-based. Restarting sshd.&#34; sudo systemctl restart sshd else ## On SysV init systems echo &#34;System is SysV init-based. Restarting ssh.&#34; sudo service ssh restart fi echo &#34;SSH configuration completed. Disconnecting from server.&#34; # exit server exit # exit server Securely Storing SSH Keys and Auth Tokens on the Internet# Storing your SSH keys and authentication tokens on the internet might seem like a bad idea, but if they are properly secured, storing them in a public GitHub repository can be a convenient and secure way to sync your SSH keys and authentication tokens across multiple machines. Luckily for us, ansible-vault&rsquo;s encryption engine is based on the AES-256 cipher, which is a symmetric cipher that is quantum resistant. This ensures that sensitive information remains protected, even in a public repository.
Encrypting Files Via Ansible-Vault# To encrypt files, including your SSH keys and authentication tokens on the internet, run the following command:
# Encrypt files using ansible-vault ansible-vault encrypt &lt;path_to_file&gt; Enter an encryption key when prompted.
Decrypting Files Via Ansible-Vault# To decrypt files, run the following command:
# Decrypt files using ansible-vault ansible-vault decrypt &lt;path_to_file&gt; Enter the encryption key when prompted.
`}).add({id:3,href:"/blog/uses/",title:"The Things I Use",description:"The wonderful world of things I use to make my life easier.",content:` Getting closer to how your environment actualy works will only expand your mind \u2014 Michael B. Paulson, otherwise known as ThePrimeagen
This page was last edited on March 29, 2024
My former college roomate and good friend, Hayden Buscher, recently made a post about the things he uses to stay productive. Giving credit where its due, I thought it was a great idea, so I decided to give my own spin on it.
This list is the fruits of my due diligence and research into finding the right tools for my use cases. I hope it helps you find the right tools for you.
Hardware# Computer# The laptop I use is a is a Gigabyte AERO 16 OLED creator laptop, which features a Intel 12th Gen i7 Processor, and a NVIDIA GeForce RTX 3070 Ti Graphics Card. I love the anodized alumnium finish on the chasis, its sturdy, aesthetically pleasing, and easy to clean. The OLED screen is gorgeous, I have become spolied by such beautiful screens and stuggle looking at normal High Definition LED screens. People passing by or in class will look at my screen and compliment it (that&rsquo;s how you know its good, who in their right mind would do that). As with all OLED screens, scren burn is a real and legitmate concern I struggle with at times, but it is a skill issue I have solved by autohiding my dock and with screen savers, and in dire situations this video. The keyboard is a joy to type on, and the trackpad is smooth and responsive, but both get dirty quickly. The dongle provided by Gigabyte was filmsy, and cheaply made, so I replaced it with a USB-C hub from Amazon. The battery lasts about 3-4 hours on a full charge, which is fine for my use cases, but I wish it lasted longer. I&rsquo;ve had this laptop for about a year now, and I&rsquo;m very happy with it and would recommend it to anyone looking for a new laptop.
Mobile Devices# My phone isn&rsquo;t anything special, so I&rsquo;m not going to talk about it. I use a iPad of the 10.2&quot; variety (9th generation). I use it for reading and taking notes in class. Honestly, this felt like a missing piece of my workflow, and I&rsquo;m glad I got it. With a paper-type screen protector, I get the feel of writing on paper, the clarity and beauty of a digital screen, and the syncing and backup of the cloud on a screen the size of a notebook. I use a knockoff Apple Pencil, and it works fine. For note taking, I use the app Goodnotes with the lifetime subcription.
Software# Operating System# Wow, what an easy and not at all controversial topic to answer&hellip; Welp, here we go. I technically dual boot Windows 11 (ew) and Ubuntu 22.04.2 LTS, also known as Jammy Jellyfish, but so much of my time is spent on Ubuntu that I&rsquo;m just going to talk about that. My only gripes with it are the graphics drivers for my Nvidia GPU, but this is resolved by the proprietary drivers from Nvidia provided by Ubuntu.
I&rsquo;ve come to notice that when it comes to the tools I use (especially when it comes to software), usage time and maintainance/stability are inversely proportional to the customizability the tool provides. The more customization is provided in software, the more time is spent configuring and mataining it, and in worst-case scenarios, the more unstable it becomes. Because of this, less time is spend actually using it.
My operating system is a tool, and as all good tools should, the distro I use should be one that leverages this relationship, so I can manage how the software is used, and not how it works. This is why I am probably not ever going to be an Arch Linux user. Its very impressive how quickly Arch Linux packages maintainers innovate and release changes, and pacman is a great package manager, but I do not have the time nor the patience to maintain my broken system when I forget to update after a week.
On the other end of the spectrum, Ubuntu works out of the box, but its quite bloated with software I will never use or need. I used to be a bit of a distro hopper, but like an old pair of jeans, I always come back to Ubuntu for its ease of use and stability. For the most part, it just works.
One distro that has caught my eye and I&rsquo;ve been meaning to try is Debian, specifically Debian 12 (Bookworm) . Its seems to hit the sweet spot of stability and customizability between Arch and Ubuntu, and I&rsquo;ve heard great things about from Hayden and Noah Oveson.
Window Manager# I&rsquo;m not a fan of the default GNOME desktop environment, I&rsquo;m a tiling window enjoyer. I like to have full control over my windows, so I use the i3 window manager. However, I plan on switching to dwm in the future, as I&rsquo;ve heard it is more stable and faster than i3.
Coding Font# I cannot stress how elgalant and beautiful the font MonoLisa is. I use it for everything, from my code editor to my terminal. MonoLisa definately lives up to its branding of &ldquo;font follows function&rdquo;. Being a monospaced font, each of the characters are the same width and its ligatures, which is the combination of two or more characters into a single character, provide a great reading experience and look cool. I patch MonoLisa into a Nerd Font by using this custom patching script. I highly recommend it.
`}).add({id:4,href:"/blog/sphinx-github-actions-docs-guide/",title:"Documentation with Sphinx and GitHub Actions the Right Way",description:"A brief guide to setting up Sphinx and GitHub Actions to automatically build and deploy your code documentation to GitHub Pages.",content:`One of the things I value the most when it comes to when it comes to writing software I publish is its maintainability, from the obscure and simple bash scripts to the large and complex programing pillars packed with passion that are placed in my programming portfolio.
For most people, this is limited to writing consise comments in the codebases with the hope that they work once and never need to be touched again. This approach
falls flat
the big picture, as in what
modules do on their own and what are the consequences of its execution with respect to the entire codebase
most important aspects of any software project is its documentation.
. \u251C\u2500\u2500 .github/ \u2502 \u2514\u2500\u2500 workflows/ \u2502 \u2514\u2500\u2500 sphinx-pipeline.yml \u251C\u2500\u2500 source/ \u2502 \u251C\u2500\u2500 _static/ \u2502 \u2502 \u251C\u2500\u2500 css/ \u2502 \u2502 \u251C\u2500\u2500 favicons/ \u2502 \u2502 \u251C\u2500\u2500 img/ \u2502 \u2502 \u2514\u2500\u2500 pdf/ \u2502 \u251C\u2500\u2500 conf.py \u2502 \u2514\u2500\u2500 index.rst \u251C\u2500\u2500 .gitignore \u251C\u2500\u2500 Make.bat \u251C\u2500\u2500 Makefile \u2514\u2500\u2500 requirements.txt name: CI/CD Pipeline for Sphinx # Controls when the workflow will run on: push: branches: [main] pull_request: branches: [main] workflow_dispatch: # The sequence of runs in this workflow: jobs: deploy: name: Build and Deploy Documentation runs-on: ubuntu-latest steps: - run: lsb_release -a - run: uname -a - name: Check out Repository Code uses: actions/checkout@v4 - name: Setup Python uses: actions/setup-python@v4 with: python-version: &#34;3.10&#34; # pip caching - name: Locate pip&#39;s cache id: pip-cache run: echo &#34;::set-output name=dir::$(pip cache dir)&#34; - name: Cache dependencies uses: actions/cache@v3 with: path: \${{ steps.pip-cache.outputs.dir }} key: \${{ runner.os }}-pip-\${{ hashFiles(&#39;**/requirements.txt&#39;) }} restore-keys: | \${{ runner.os }}-pip- # Install runtime dependencies - name: Upgrade pip run: pip install --upgrade pip - name: Install dependencies run: pip install -r requirements.txt # Build sphinx source files - name: Build sphinx files run: make html # Publish build files - name: Deploy to GitHub Pages uses: peaceiris/actions-gh-pages@v3 if: github.ref == &#39;refs/heads/main&#39; with: github_token: \${{ secrets.GITHUB_TOKEN }} publish_dir: ./build/html # Upload for introspection, useful for pull requests and debugging - uses: actions/upload-artifact@v3 with: name: generated-site path: public/ # Byte-compiled / optimized / DLL files __pycache__/ *.py[cod] *$py.class # C extensions *.so # Sphinx documentation build/ # Environments .env .venv # Minimal makefile for Sphinx documentation # # You can set these variables from the command line. SPHINXOPTS = SPHINXBUILD = sphinx-build SOURCEDIR = source BUILDDIR = build # Put it first so that &#34;make&#34; without argument is like &#34;make help&#34;. help: @$(SPHINXBUILD) -M help &#34;$(SOURCEDIR)&#34; &#34;$(BUILDDIR)&#34; $(SPHINXOPTS) $(O) .PHONY: help Makefile github: @make html @cp -a build/html/. ./docs # Catch-all target: route all unknown targets to Sphinx using the new # &#34;make mode&#34; option. $(O) is meant as a shortcut for $(SPHINXOPTS). %: Makefile @$(SPHINXBUILD) -M $@ &#34;$(SOURCEDIR)&#34; &#34;$(BUILDDIR)&#34; $(SPHINXOPTS) $(O) # To get started with Dependabot version updates, you&#39;ll need to specify which # package ecosystems to update and where the package manifests are located. # Please see the documentation for all configuration options: # https://help.github.com/github/administering-a-repository/configuration-options-for-dependency-updates version: 2 updates: # Maintain dependencies for GitHub Actions - package-ecosystem: &#34;github-actions&#34; directory: &#34;/&#34; schedule: interval: &#34;daily&#34; # Maintain dependencies for pipenv - package-ecosystem: &#34;pip&#34; # See documentation for possible values directory: &#34;/&#34; # Location of package manifests schedule: interval: &#34;daily&#34; `}).add({id:5,href:"/blog/impossible-list/",title:"My Impossible List",description:"My attempt to live forever or die trying, by doing what I want to do with my life. Do the things I want to do, see the places I want to see, meet the people I want to meet, and live the life I want to live.",content:` We choose to go to the Moon. We choose to go to the Moon in this decade and do the other things, not because they are easy, but because they are hard; because that goal will serve to organize and measure the best of our energies and skills, because that challenge is one that we are willing to accept, one we are unwilling to postpone&hellip; And, therefore, as we set sail we ask God&rsquo;s blessing on the most hazardous and dangerous and greatest adventure on which man has ever embarked.
\u2014 John F. Kennedy1
This page was last edited on August 14, 2023
The impossible list traces its origins to its creator, Joel Runyon. It&rsquo;s essentially an aspirational catalog of personal challenges, goals, and experiences that push the boundaries of what an individual believes they can achieve.
The impossible list is not a bucket list, but very is similar to one. The bucket list has this stigma attached to it which is that if the creator of it does not complete it, they have &ldquo;failed&rdquo; themselves. I would not like to self impose this pressure onto myself, but have a dynamic long-term roadmap for myself, that changes and evolves along with me.
I will attempt to update this list regularly, in the case where I complete something or have something to add, with the later being most likely.
\u{1F603} Life Goals# Read 100 books Improve a Person&rsquo;s Life Give a TEDx Talk Give a lecture at a scientific/professional conference Give a lecture at a university Work out 5 days a week regularly Complete my Reading List Complete my TV/Movies Watch List \u{1F3CB}\uFE0F Fitness/Health Goals# Do 100 push-ups in a single set Do 20 pull-ups in a single set \u{1F4BC} Professional Goals# Work Remotely Work at MANGA Work at a startup (June 19, 2023 - DeepWater Exploration) Found a startup Start a newsletter/YouTube channel Gain 100 subscribers Gain 250 subscribers Gain 500 subscribers Gain 1,000 subscribers Write a book Write 100 blog posts \u{1F3A8} Creative Goals# Write a script for a movie/short film (Jan 5, 2022 - A Reminiscent Gift) Work in a movie/short film as a film editor Direct a movie/short film \u{1F4DA} Intellectual Goals# Learn to play the guitar/piano Learn a foreign language Learn a martial art Learn another language Learn Quantum Mechanics Learn Quantum Computing Write/Coauthor a scientific paper If you are someone who can help me make one of these a reality, please get in touch with me. I would love to hear from you.
The above quote is excerpted from former President John F. Kennedy&rsquo;s Address at Rice University on the Nation&rsquo;s Space Effort, on September 12, 1962&#160;&#x21a9;&#xfe0e;
`}).add({id:6,href:"/blog/off-by-one/",title:"Off-By-One Errors and How to Avoid Them",description:"How to never overshoot or undershoot for loops again.",content:`When I was a beginner at programming, I would often find myself struggling with the implementation of for loops. The amount of times I would need to iterate through an array, dictionary, iterable, or any given data structure would always be one more or one less than I anticipated. As a result, I became quite familiar with the following error message:
IndexError: list index out of range I recently discovered this problem I dealt with had a name: the off-by-one error. An off-by-one error is a type of error that occurs when an loop is iterated one more or one less than intended. Off-by-one errors are typically caused by a mistake in the either initial value of the loop variable or in the end condition of the loop. Mathematically this can be represented by
$$ n \\pm	1 $$
where $n$ represents the number of times intended to loop There two types of off-by-one errors: undershooting and overshooting. Undershooting occurs when the loop iterates one less time than intended, while overshooting occurs when the loop iterates one more time than intended. Let&rsquo;s look at an example of each case, where $n$ represents the amount of times we intend to loop and $i$ represents the current iteration:
// Case Study A for (int i = 1; i &lt; n; i++) { /* Body of the loop */ } Case A is an example of undershooting, and it will be executed $(n - 1)$ times. In Case A, $i$ is defined to be one more than intended, which can be proven with experimentation. For example, if $n$ was defined to be $10$ (and each value of $i$ was printed), then the following numbers would be the resulting output:
$$1, 2, 3, 4, 5, 6, 7, 8, 9$$
This is because, at that point where $i$ becomes $10$, the conditional statement $i &lt; n$ becomes false and the loop subsequently terminates one iteration less than intended. This scenario can be fixed by changing the initial value of $i$ to be $0$ instead of $1$. A good example of overshooting is with the following brain teaser:
If you build a straight fence 30 feet long with posts spaced 3 feet apart, how many posts do you need? (The common answer is one less than the correct answer) // Case Study B for (int i = 0; i &lt;= n; i++) { /* Body of the loop */ } Case B is an example of overshooting, amd it will be executed $(n + 1)$ times. In Case B, $i$ is defined to be one less than intended, which can also be proven with experimentation. Following our previous thought experiment, the following would be the resulting output:
$$0, 1, 2, 3, 4, 5, 6, 7, 8, 9, \\text{error}$$
This is because, at that point where $i$ becomes $10$, the conditional statement $i \\leq n$ still remains true, resulting in the loop iterating one more than intended. This scenario can be fixed by changing the initial value of $i$ to be $1$ instead of $0$. A good example of overshooting is with the following brain teaser:
If you have n posts, how many sections are there between them? (The common answer is one more than the correct answer) Note that a for loop is simply a special case of a while loop where the number of iterations to be done is already known, whereas a while loop has an indefinite number of iterations. This means that an off-by-one error can occur in while loops, although it is less common, as while loop definitions are based around the output of logical expressions, whereas for loop definitions are based around the repetition of an iterable object. One of the correct ways to write the loop is:
for (int i = 0; i &lt; n; i++) { /* Body of the loop */ } If you found this post interesting, I would recommend the following as further reading to learn more about off-by-one errors:
Wikipedia article `}).add({id:7,href:"/blog/hdl-best-practices/",title:"SystemVerilog Best Practices",description:"A collection of some best practices for SystemVerilog design and verification.",content:`When I was a beginner at programming, I would often find myself struggling with the implementation of for loops. The amount of times I would need to iterate through an array, dictionary, iterable, or any given data structure would always be one more or one less than I anticipated. As a result, I became quite familiar with the following error message:
IndexError: list index out of range I recently discovered this problem I dealt with had a name: the off-by-one error. An off-by-one error is a type of error that occurs when an loop is iterated one more or one less than intended. Off-by-one errors are typically caused by a mistake in the either initial value of the loop variable or in the end condition of the loop. Mathematically this can be represented by
$$ n \\pm	1 $$
where $n$ represents the number of times intended to loop There two types of off-by-one errors: undershooting and overshooting. Undershooting occurs when the loop iterates one less time than intended, while overshooting occurs when the loop iterates one more time than intended. Let&rsquo;s look at an example of each case, where $n$ represents the amount of times we intend to loop and $i$ represents the current iteration:
// Case Study A for (int i = 1; i &lt; n; i++) { /* Body of the loop */ } Case A is an example of undershooting, and it will be executed $(n - 1)$ times. In Case A, $i$ is defined to be one more than intended, which can be proven with experimentation. For example, if $n$ was defined to be $10$ (and each value of $i$ was printed), then the following numbers would be the resulting output:
$$1, 2, 3, 4, 5, 6, 7, 8, 9$$
This is because, at that point where $i$ becomes $10$, the conditional statement $i &lt; n$ becomes false and the loop subsequently terminates one iteration less than intended. This scenario can be fixed by changing the initial value of $i$ to be $0$ instead of $1$. A good example of overshooting is with the following brain teaser:
If you build a straight fence 30 feet long with posts spaced 3 feet apart, how many posts do you need? (The common answer is one less than the correct answer) // Case Study B for (int i = 0; i &lt;= n; i++) { /* Body of the loop */ } Case B is an example of overshooting, amd it will be executed $(n + 1)$ times. In Case B, $i$ is defined to be one less than intended, which can also be proven with experimentation. Following our previous thought experiment, the following would be the resulting output:
$$0, 1, 2, 3, 4, 5, 6, 7, 8, 9, \\text{error}$$
This is because, at that point where $i$ becomes $10$, the conditional statement $i \\leq n$ still remains true, resulting in the loop iterating one more than intended. This scenario can be fixed by changing the initial value of $i$ to be $1$ instead of $0$. A good example of overshooting is with the following brain teaser:
If you have n posts, how many sections are there between them? (The common answer is one more than the correct answer) Note that a for loop is simply a special case of a while loop where the number of iterations to be done is already known, whereas a while loop has an indefinite number of iterations. This means that an off-by-one error can occur in while loops, although it is less common, as while loop definitions are based around the output of logical expressions, whereas for loop definitions are based around the repetition of an iterable object. One of the correct ways to write the loop is:
for (int i = 0; i &lt; n; i++) { /* Body of the loop */ } If you found this post interesting, I would recommend the following as further reading to learn more about off-by-one errors:
Wikipedia article `}).add({id:8,href:"/blog/markdown-syntax/",title:"Markdown Syntax Guide",description:"Sample article showcasing basic Markdown syntax and formatting for HTML elements.",content:`This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.
Headings# The following HTML &lt;h1&gt;\u2014&lt;h6&gt; elements represent six levels of section headings. &lt;h1&gt; is the highest section level while &lt;h6&gt; is the lowest.
H1# H2# H3# H4# H5# H6# Paragraph# Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.
Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.
Blockquotes# The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.
Blockquote without attribution# Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.
Blockquote with attribution# Don&rsquo;t communicate by sharing memory, share memory by communicating.
\u2014 Rob Pike1
Tables# Tables aren&rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.
Name Age Bob 27 Alice 23 Inline Markdown within tables# Italics Bold Code italics bold code Code Blocks# Code block with backticks# &lt;!doctype html&gt; &lt;html lang=&#34;en&#34;&gt; &lt;head&gt; &lt;meta charset=&#34;utf-8&#34; /&gt; &lt;title&gt;Example HTML5 Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Test&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Code block indented with four spaces# &lt;!doctype html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;Example HTML5 Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Test&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Code block with Hugo&rsquo;s internal highlight shortcode# &lt;!doctype html&gt; &lt;html lang=&#34;en&#34;&gt; &lt;head&gt; &lt;meta charset=&#34;utf-8&#34;&gt; &lt;title&gt;Example HTML5 Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Test&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; List Types# Ordered List# First item Second item Third item Unordered List# List item Another item And another item Nested list# Fruit Apple Orange Banana Dairy Milk Cheese Other Elements \u2014 abbr, sub, sup, kbd, mark# GIF is a bitmap image format.
H2O
Xn + Yn = Zn
Press CTRL+ALT+Delete to end the session.
Most salamanders are nocturnal, and hunt for insects, worms, and other small creatures.
The above quote is excerpted from Rob Pike&rsquo;s talk during Gopherfest, November 18, 2015.&#160;&#x21a9;&#xfe0e;
`}),z.addEventListener("input",function(){let n=this.value,o=e.search(n,5,{enrich:!0}),s=new Map;for(let r of o.flatMap(l=>l.result))s.has(r.href)||s.set(r.doc.href,r.doc);if(H.innerHTML="",H.classList.remove("search__suggestions--hidden"),s.size===0&&n){let r=document.createElement("div");r.innerHTML=`No results for "<strong>${n}</strong>"`,r.classList.add("search__no-results"),H.appendChild(r);return}for(let[r,l]of s){let h=document.createElement("a");h.href=r,h.classList.add("search__suggestion-item"),H.appendChild(h);let f=document.createElement("div");f.textContent=l.title,f.classList.add("search__suggestion-title"),h.appendChild(f);let m=document.createElement("div");if(m.textContent=l.description,m.classList.add("search__suggestion-description"),h.appendChild(m),H.childElementCount===5)break}})})();})();
//! Source: https://github.com/h-enk/doks/blob/master/assets/js/index.js
/*! Source: https://dev.to/shubhamprakash/trap-focus-using-javascript-6a3 */
//! Source: https://discourse.gohugo.io/t/range-length-or-last-element/3803/2
